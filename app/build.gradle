apply plugin: 'com.android.application'

def debugsuffix = System.
        getProperty('debugsuffix', project.getProperties().get('debugsuffix', null))

def final yourApplicationId = "hello.example.com.hello"

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.0"
    defaultConfig {
        applicationId yourApplicationId + debugsuffix
        minSdkVersion 19
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        resValue "string", "my_string", "Hello"+debugsuffix
        resValue "string", "app_name", "Hello"+debugsuffix
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
                applicationVariants.all { variant ->
                    renameAPK(variant, debugsuffix)
                }
        }
    }
}


def renameAPK(variant, suffix) {
    def yourApplicationId = "hello.example.com.hello" + suffix
    variant.outputs.each { output ->
        def file = output.packageApplication.outputFile
        def fileName = yourApplicationId + ".apk"
        output.packageApplication.outputFile = new File(file.parent, fileName)
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:24.2.1'
    testCompile 'junit:junit:4.12'
}
